package application.controller.sponsor;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import application.util.EURI;
import application.util.ServerRequest;
import javafx.fxml.FXML;
import javafx.scene.control.Button;
import javafx.scene.control.Pagination;
import javafx.scene.control.TextField;
import javafx.scene.layout.AnchorPane;

public class ProjectsController {
	
	@FXML
	private TextField searchField;
	
	@FXML
	private Button searchButton;
	
	@FXML
	private Pagination projectsPagination;
	
	@FXML
	private AnchorPane latestAnchorPane;
	
	@FXML
	private Pagination ownProjectsPagination;
	
	@FXML
	private AnchorPane ownedAnchorPane;
	
	private int getItemsPerPage()
	{
		return 3;
	}
	
public void initialize() {
		
		ServerRequest req = new ServerRequest(EURI.PROJECTS.uri());
		
		try {
			JSONObject content = req.get().getContent();
			
			JSONArray latest = content.getJSONArray("latestProjects");
			JSONArray owned = content.getJSONArray("teamProjects");
			
			int latestLen =  latest.length();
			int ownLen = owned.length();
			
			projectsPagination.setPageCount((Integer) (latestLen / getItemsPerPage()) + 1);
			ownProjectsPagination.setPageCount((Integer) (ownLen / getItemsPerPage()) + 1);
			
			projectsPagination.setPageFactory((Integer pageIndex) -> createPage(pageIndex, latest));
			ownProjectsPagination.setPageFactory((Integer pageIndex) -> createPage(pageIndex, owned));
			
		} catch (JSONException e) {
			e.printStackTrace();
			return;
		}
	}
}
